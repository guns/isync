# Global configuration section
#   Values here are used as defaults for any following Channel section that
#   doesn't specify them.
Expunge None
Create Both

MaildirStore local
Path ~/Mail/
Trash Trash


IMAPStore work
Host work.host.com
User tehuser
Pass xxxxxxxx
# Fetch password from gnome-keyring:
#PassCmd "gnome-keyring-query get mail_pw"
# Fetch password from .netrc:
#PassCmd "sed -n -e 's,^machine work\.host\.com login tehuser password \(.*\),\1,p' < $HOME/.netrc"
# Fetch password from a gpg-encrypted file:
#PassCmd "gpg --quiet --for-your-eyes-only --decrypt $HOME/imappassword.gpg"
# Fetch password from pwmd (http://pwmd.sourceforge.net/):
#PassCmd "echo -ne 'GET myIsp\tpassword' | pwmc datafile"
# On Mac OS X, run "KeyChain Access" -- File->New Password Item. Fill out form using
#  "Keychain Item Name" http://IMAPSERVER  (note: the "http://" is a hack)
#  "Account Name" USERNAME
#  "Password" PASSWORD
#PassCmd "/usr/bin/security find-internet-password -w -a USERNAME -s IMAPSERVER ~/Library/Keychains/login.keychain"
CertificateFile /etc/ssl/certs/ca-certificates.crt

Channel work
Master :work:
Slave :local:work
Expunge Slave
Sync PullNew Push


IMAPStore personal
Host host.play.com
Port 6789
RequireSSL no

Channel personal
Master :personal:
Slave :local:personal
Expunge Both
MaxMessages 150
MaxSize 200k

IMAPStore remote
Tunnel "ssh -q host.remote.com /usr/sbin/imapd"

Channel remote
Master :remote:
Slave :local:remote


Group boxes
Channels work personal remote


IMAPStore st1
Host st1.domain.com
RequireCRAM yes
CertificateFile ~/.st1-certificate.crt

IMAPStore st2
Host imap.another-domain.com
Path non-standard/
RequireSSL no
UseTLSv1 no

Channel rst
Master :st1:somebox
Slave :st2:


IMAPAccount server
Host imaps:foo.bar.com
CertificateFile ~/.server-certificate.crt

IMAPStore server
Account server
MapInbox inbox
Trash ~/trash
TrashRemoteNew yes

MaildirStore mirror
Path ~/Maildir/

Channel o2o
Master :server:
Slave :mirror:
Patterns %

Group partial o2o:inbox,sent-mail,foobar

# INBOX => server, INBOX.foo => server.foo, etc.
Channel inbox
Master :server:INBOX
Slave :mirror:server
Patterns *
